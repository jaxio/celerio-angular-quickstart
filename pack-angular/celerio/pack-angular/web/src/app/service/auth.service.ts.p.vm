$output.file("web/src/app/service/auth.service.ts")##

import {Injectable} from '@angular/core';
import {HttpParams, HttpClient, HttpErrorResponse} from '@angular/common/http';
import {Observable} from 'rxjs/Observable';
import {catchError, map} from 'rxjs/operators';
import 'rxjs/add/observable/throw';

@Injectable()
export class AuthService {

  constructor(private http: HttpClient) {
  }

  isAuthenticated(): Observable<boolean> {
    return this.http.get('/api/authenticated')
      .pipe(catchError(this.handleError));
  }

  login(j_username: string, j_password: string): Observable<boolean> {
    console.log('login for ' + j_username);
    const params = {
      j_username: j_username,
      j_password: j_password,
      submit: 'Login'
    };

    const body = new HttpParams({fromObject: params});

    return this.http.post('/api/login', body, {observe: 'response'})
      .pipe(
        map(res => res.status === 200),
        catchError(this.handleError)
      );
  }

  private handleError(err: HttpErrorResponse) {
    let errMsg: string;
    if (err.error instanceof Error) {
      // A client-side or network error occurred. Handle it accordingly.
      errMsg = 'An error occurred:' + err.error.message;
    } else {
      // The backend returned an unsuccessful response code.
      // The response body may contain clues as to what went wrong,
      errMsg = 'Backend returned code ' + err.status + ', body was: ' + err.error;
    }
    console.error(errMsg);
    return Observable.throw(errMsg);
  }
}

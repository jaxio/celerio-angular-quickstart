/*
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Template pack-angular:src/main/java/repository/EntityRepository.java.e.vm
 */
package com.mycompany.myapp.repository;

import java.util.List;

import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.jpa.repository.*;

import com.mycompany.myapp.domain.Account;
import com.mycompany.myapp.domain.Account_;

public interface AccountRepository extends JpaRepository<Account, Long> {

    /**
     * Return the persistent instance of {@link Account} with the given unique property value email,
     * or null if there is no such persistent instance.
     *
     * @param email the unique value
     * @return the corresponding {@link Account} persistent instance or null
     */
    Account getByEmail(String email);

    default List<Account> complete(String query, int maxResults) {
        Account probe = new Account();
        probe.setEmail(query);

        ExampleMatcher matcher = ExampleMatcher.matching() //
                .withMatcher(Account_.email.getName(), match -> match.ignoreCase().startsWith());

        Page<Account> page = findAll(Example.of(probe, matcher), new PageRequest(0, maxResults));
        return page.getContent();
    }
}
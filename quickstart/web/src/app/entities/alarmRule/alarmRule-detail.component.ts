//
// 
// Source code generated by Celerio, an Open Source code generator by Jaxio.
// Template pack-angular:web/src/app/entities/entity-detail.component.ts.e.vm
//
import {Component, OnInit, OnDestroy, Input, Output, EventEmitter} from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { SelectItem } from 'primeng/primeng';
import { MessageService} from '../../service/message.service';
import {AlarmRule} from './alarmRule';
import {AlarmRuleService} from './alarmRule.service';
import {Account} from '../account/account';

@Component({
    moduleId: module.id,
	templateUrl: 'alarmRule-detail.component.html',
	selector: 'alarmRule-detail',
})
export class AlarmRuleDetailComponent implements OnInit, OnDestroy {
    alarmRule : AlarmRule;

    private params_subscription: any;


    @Input() sub : boolean = false;
    @Input() // used to pass the parent when creating a new AlarmRule
    set accountFk(accountFk : Account) {
        this.alarmRule = new AlarmRule();
        this.alarmRule.accountFk = accountFk;
    }

    @Output() onSaveClicked = new EventEmitter<AlarmRule>();
    @Output() onCancelClicked = new EventEmitter();

    constructor(private route: ActivatedRoute, private router: Router, private messageService: MessageService, private alarmRuleService: AlarmRuleService) {
    }

    ngOnInit() {
        if (this.sub) {
            return;
        }

        this.params_subscription = this.route.params.subscribe(params => {
            let id = params['id'];
            console.log('ngOnInit for alarmRule-detail ' + id);

            if (id === 'new') {
                this.alarmRule = new AlarmRule();
            } else {
                this.alarmRuleService.getAlarmRule(id)
                    .subscribe(alarmRule => {
                            this.alarmRule = alarmRule;
                        },
                        error =>  this.messageService.error('ngOnInit error', error)
                    );
            }
        });
    }

    ngOnDestroy() {
        if (!this.sub) {
            this.params_subscription.unsubscribe();
        }
    }

    gotoAccountFk() {
        this.router.navigate(['/account', this.alarmRule.accountFk.id]);
    }

    clearAccountFk() {
        this.alarmRule.accountFk = null;
    }

    onSave() {
        this.alarmRuleService.update(this.alarmRule).
            subscribe(
                alarmRule => {
                    this.alarmRule = alarmRule;
                    if (this.sub) {
                        this.onSaveClicked.emit(this.alarmRule);
                        this.messageService.info('Saved OK and msg emitted', 'Angular Rocks!')
                    } else {
                        this.messageService.info('Saved OK', 'Angular Rocks!')
                    }
                },
                error =>  this.messageService.error('Could not save', error)
            );
    }

    onCancel() {
        if (this.sub) {
            this.onCancelClicked.emit("cancel");
            this.messageService.info('Cancel clicked and msg emitted', 'Angular Rocks!')
        }
    }

}

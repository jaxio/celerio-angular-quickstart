<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jaxio</groupId>
    <artifactId>celerio-angular-quickstart</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>celerio-angular-quickstart</name>
    <description>
        A Spring boot webapp using Angular - Generated by Celerio
    </description>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>1.8</java.version>

        <!-- ~~~~~~~~ -->
        <!-- Database -->
        <!-- ~~~~~~~~ -->

        <!-- **** CHANGE THE PROPERTIES BELOW TO USE YOUR OWN DATABASE **** -->
        <!-- **** DO NOT USE A PRODUCTION DATABASE **** -->

        <!-- H2 DATABASE SETTINGS -->
        <jdbc.groupId>com.h2database</jdbc.groupId>
        <jdbc.artifactId>h2</jdbc.artifactId>
        <jdbc.version>${h2.version}</jdbc.version>

        <jdbc.driver>org.h2.Driver</jdbc.driver>
        <jdbc.url>jdbc:h2:${project.build.directory}/db/angulardb;MVCC=TRUE;FILE_LOCK=NO</jdbc.url>
        <jdbc.user>root</jdbc.user>
        <jdbc.password>manager</jdbc.password>
        <jdbc.schema></jdbc.schema>
        <jdbc.catalog></jdbc.catalog>
        <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
        <sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
        <sql.create.script>01-create.sql</sql.create.script>


        <!-- MYSQL DATABASE SETTINGS
        <jdbc.groupId>mysql</jdbc.groupId>
        <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
        <jdbc.version>${mysql.version}</jdbc.version>

        <jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
        <jdbc.url>jdbc:mysql://127.0.0.1:3306/angulardb</jdbc.url>
        <jdbc.user>root</jdbc.user>
        <jdbc.password>manager</jdbc.password>
        <jdbc.schema></jdbc.schema>
        <jdbc.catalog></jdbc.catalog>
        <hibernate.dialect>org.hibernate.dialect.MySQL57InnoDBDialect</hibernate.dialect>
        <sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
        <sql.create.script>01-mysql-create.sql</sql.create.script>
        -->


        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Version dependencies when used in multiple dependencies -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <celerio-maven-plugin.outputDir>${project.basedir}</celerio-maven-plugin.outputDir>
        <celerio-maven-plugin.version>4.0.23</celerio-maven-plugin.version>

        <celerio-maven-plugin.configuration>../quickstart-conf/celerio-maven-plugin.xml</celerio-maven-plugin.configuration>
        <celerio-maven-plugin.packs.configuration>../quickstart-conf/celerio-template-packs.xml</celerio-maven-plugin.packs.configuration>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Variables substituted in resources file at build time -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <application.name>${project.name}</application.name>
        <application.version>${project.version}</application.version>
        <application.description>${project.description}</application.description>
        <!-- host port where the application will be deployed -->
        <application.host>localhost</application.host>
        <application.port>8080</application.port>
        <application.contextpath>/demo</application.contextpath>
        <!-- logs -->
        <log.target>${project.build.directory}/logs</log.target>
        <log.level>DEBUG</log.level>
        <log.sql.queries.level>DEBUG</log.sql.queries.level>
        <!-- hibernate, see by src/main/resource/hibernate.properties -->
        <hibernate.show.sql>true</hibernate.show.sql>
        <hibernate.format.sql>true</hibernate.format.sql>
        <hibernate.generate_statistics>true</hibernate.generate_statistics>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>
        <hibernate.ehcache.configuration.file>ehcache.xml</hibernate.ehcache.configuration.file>
        <hibernate.use.second.level.cache>false</hibernate.use.second.level.cache>
        <hibernate.use.query.cache>false</hibernate.use.query.cache>

    </properties>

    <dependencies>
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- Celerio code completion support in velocity templates -->
        <!-- See pack-angular/META-INF/velocity_implicit.vm -->
        <dependency>
            <groupId>com.jaxio.celerio</groupId>
            <artifactId>celerio-engine</artifactId>
            <version>${celerio-maven-plugin.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-data</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.8.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.8.0</version>
        </dependency>

        <!-- ~~~~ -->
        <!-- TEST -->
        <!-- ~~~~ -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <!-- Set the name of the war, used as the context root when the app
            is deployed -->
        <finalName>${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>application.yml</exclude>
                </excludes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${celerio-maven-plugin.outputDir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>com.jaxio.celerio</groupId>
                            <artifactId>celerio-engine</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <delimiters>
                        <delimiter>@*@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                        <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <plugin>
                <!-- http://mojo.codehaus.org/build-helper-maven-plugin/ -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>Adding generated java folder to build</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/java</source>
                                <source>src/main/generated-java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Adding generated java test location to test build</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/java</source>
                                <source>src/test/generated-java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Drop and recreate the database -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <id>db</id>
            <build>
                <defaultGoal>initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <!-- http://mojo.codehaus.org/sql-maven-plugin/ -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>Create and initialize the database</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <driver>${jdbc.driver}</driver>
                                    <url>${jdbc.url}</url>
                                    <username>${jdbc.user}</username>
                                    <password>${jdbc.password}</password>
                                    <autocommit>true</autocommit>
                                    <encoding>UTF-8</encoding>
                                    <printResultSet>true</printResultSet>
                                    <onError>continue</onError>
                                    <delimiter>${sql-maven-plugin.delimiter}</delimiter>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${project.basedir}/..</basedir>
                                        <includes>
                                            <include>quickstart-conf/${sql.create.script}</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${jdbc.groupId}</groupId>
                                <artifactId>${jdbc.artifactId}</artifactId>
                                <version>${jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Profiles below are used when Celerio Maven Plugin is present in the build process -->
        <profile>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Extract the database metadata -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <id>metadata</id>
            <build>
                <defaultGoal>generate-sources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.jaxio.celerio</groupId>
                        <artifactId>dbmetadata-maven-plugin</artifactId>
                        <version>${celerio-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Extract the database schema.</id>
                                <goals>
                                    <goal>extract-metadata</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${jdbc.groupId}</groupId>
                                <artifactId>${jdbc.artifactId}</artifactId>
                                <version>${jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Generate the code using Celerio -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <id>gen</id>
            <build>
                <defaultGoal>generate-sources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.jaxio.celerio</groupId>
                        <artifactId>celerio-maven-plugin</artifactId>
                        <version>${celerio-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Generates files using the extracted database schema.</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Delete code generated by Celerio -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <id>cleanGen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.jaxio.celerio</groupId>
                        <artifactId>celerio-maven-plugin</artifactId>
                        <version>${celerio-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Delete previously generated files (use .celerio/ folder)</id>
                                <goals>
                                    <goal>cleanGenerated</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
